/* General reset */
*,
*::after,
*::before {
  box-sizing: border-box;
  margin: 0;
}

img {
  display: block;
  max-width: 100%;
  height: 100%;
  border-radius: 1.5625rem;
}

body {
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  min-height: 100vh;
  min-height: 100svh;
  font-family: system-ui, "Segoe UI", Roboto, Helvetica, Arial, sans-serif,
    "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  background-color: #151719;
  color: whitesmoke;
}

//  Add 3D transform styling to parent element

.list {
  display: flex;
  gap: 0.625rem;
  max-width: 80.25rem;
  width: 100%;
  transform-style: preserve-3d;
  transform: perspective(1000px);
}

//   Hide images in darkness
.list .item {
  transition-property: filter, transform;
  transition-duration: 0.5s;
  filter: brightness(0);
}

// Reveal image and get closer using translate on Z axis
.list .item:hover {
  filter: brightness(1);
  transform: translateZ(200px);
}

// Select sibling of hover item
.list .item:hover + * {
  filter: brightness(0.6);
  transform: translateZ(150px) rotateY(40deg);
}

// Select second siblingof hover item
.list .item:hover + * + * {
  filter: brightness(0.4);
  transform: translateZ(70px) rotateY(20deg);
}

// Select third sibling of hover item
.list .item:hover + * + * + * {
  filter: brightness(0.2);
  transform: translateZ(30px) rotateY(10deg);
}

// How to get element on left? Using :has

// Find item that sibling has hover
.list .item:has(+ *:hover) {
  filter: brightness(0.6);
  transform: translateZ(150px) rotateY(-40deg);
}

// Find item that second sibling has hover
.list .item:has(+ * + *:hover) {
  filter: brightness(0.4);
  transform: translateZ(70px) rotateY(-20deg);
}

// Find item that  sibling has hover
.list .item:has(+ * + * + *:hover) {
  filter: brightness(0.2);
  transform: translateZ(30px) rotateY(-10deg);
}
